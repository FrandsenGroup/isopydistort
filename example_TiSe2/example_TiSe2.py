# This example shows how to use isopydistort to generate all possible
# displacive modes for a 2x2x2 supercell of TiSe2 consistent with
# P1 symmetry (first example) or P-3c1 symmetry (second example)
# using ISODISTORT's Method 3.

### import necessary modules
import numpy as np
import matplotlib.pyplot as plt

import isopydistort


### use ISODISTORT to generate the symmetry modes consistent with P1 symmetry
print('accessing ISODISTORT to run Method 3 with P1 subgroup symmetry...')
# the default ISODISTORT options modify the hexagonal basis vectors
# such that gamma = 60 instead of 120; to remain consistent with the
# original structure, we pass the basis options below
options = {'basis11':'0', 'basis12': '-2', 'basis21':'2', 'basis22':'0','basis33':'2'}
fnameiso = "TiSe2_iso_P1.txt" # output file name
isopydistort.isoget.get("TiSe2_P-3m1.cif", fnameiso, var_dict=options)
print('success')


print('accessing ISODISTORT to run Method 3 with P-3c1 subgroup symmetry...')
# the default ISODISTORT options modify the hexagonal basis vectors
# such that gamma = 60 instead of 120; to remain consistent with the
# original structure, we pass the basis options below
options = {'basis11':'0', 'basis12': '-2', 'basis21':'2', 'basis22':'0','basis33':'2'}
# we also set the subgroup symmetry to P-3c1 (SG 165)
options['subgroupsym'] = '165'
# Now we get the information from ISODISTORT. Note that this subgroup symmetry
# actually produces two options in ISODISTORT, so we can specify which one we
# want using the "selection" argument. In this case, we want the first option
# generated by ISODISTORT, so we set selection to 1 (this is also the default).
fnameiso = "TiSe2_iso_P-3c1.txt"
isopydistort.isoget.get("TiSe2_P-3m1.cif", fnameiso, var_dict=options, selection=1)
print('success')